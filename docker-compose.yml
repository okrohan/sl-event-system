version: '3.8'

services:
  # Infrastructure services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - event-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - event-network

  # Event Ingestion Service
  event-ingestion:
    image: event-ingestion-test:latest
    container_name: event-ingestion
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=default-events
    depends_on:
      - kafka
    networks:
      - event-network

  # Dispatcher Services
  dispatcher-default:
    build:
      context: .
      dockerfile: services/dispatcher-service/Dockerfile
    container_name: dispatcher-default
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=default-events
    depends_on:
      - kafka
    networks:
      - event-network

  dispatcher-critical-1:
    build:
      context: .
      dockerfile: services/dispatcher-service/Dockerfile
    container_name: dispatcher-critical-1
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=critical-events
    depends_on:
      - kafka
    networks:
      - event-network

  dispatcher-critical-2:
    build:
      context: .
      dockerfile: services/dispatcher-service/Dockerfile
    container_name: dispatcher-critical-2
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=critical-events
    depends_on:
      - kafka
    networks:
      - event-network

  dispatcher-critical-3:
    build:
      context: .
      dockerfile: services/dispatcher-service/Dockerfile
    container_name: dispatcher-critical-3
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=critical-events
    depends_on:
      - kafka
    networks:
      - event-network

networks:
  event-network:
    driver: bridge

volumes:
  kafka-data: 